// No.006
let x = 0;
let currentColor;
let speed = 2;
let labelText = '';
let shapeType = 'circle';

function setup() {
  const container = document.getElementById("canvas-container");
  const w = container.clientWidth;
  const h = container.clientHeight;

  let canvas = createCanvas(w, h);
  canvas.parent("canvas-container");

  currentColor = color(255, 100, 100);

  // スライダーとその表示
  const slider = document.getElementById("speed-slider");
  const display = document.getElementById("speed-display");

  slider.addEventListener("input", () => {
    speed = Number(slider.value);
    display.textContent = slider.value;

    // セレクタ側の選択肢を自動で更新しない（独立制御）
  });

  // セレクタ（select）によるスピード制御
  const select = document.getElementById("speed-select");
  select.addEventListener("change", () => {
    speed = Number(select.value);
    slider.value = select.value; // スライダーも連動更新
    display.textContent = select.value;
  });

  // テキスト入力によるラベル更新
  const labelInput = document.getElementById("label-input");
  labelInput.addEventListener("input", () => {
    labelText = labelInput.value;
  });

  // 図形選択セレクタ
  const shapeSelect = document.getElementById("shape-select");
  shapeSelect.addEventListener("change", () => {
    shapeType = shapeSelect.value;
  });
}

function draw() {
  background(240);
  fill(currentColor);
  noStroke();

  if (shapeType === 'circle') {
    ellipse(x, height / 2, 40, 40);
  } else if (shapeType === 'rect') {
    rectMode(CENTER);
    rect(x, height / 2, 40, 40);
  }

  x += speed;

  // ラベルを表示
  fill(0);
  textAlign(CENTER);
  text(labelText, width / 2, height - 10);

  if (x > width) x = 0;
}
